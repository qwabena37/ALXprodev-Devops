#!/bin/bash
# Fetch Pokémon data in parallel using background processes

POKEMONS=("bulbasaur" "ivysaur" "venusaur" "charmander" "charmeleon")
API_URL="https://pokeapi.co/api/v2/pokemon"
ERROR_FILE="errors.txt"

# Clear previous errors
> "$ERROR_FILE"

# Function to fetch a single Pokémon
fetch_pokemon() {
    pokemon=$1
    output_file="${pokemon}.json"
    max_retries=3
    success=false

    for attempt in $(seq 1 $max_retries); do
        if curl -s -f "${API_URL}/${pokemon}" -o "$output_file"; then
            echo "✅ Saved $pokemon data to $output_file"
            success=true
            break
        else
            echo "⚠️ Attempt $attempt failed for $pokemon"
            sleep 1
        fi
    done

    if [ "$success" = false ]; then
        echo "❌ Failed to fetch data for $pokemon after $max_retries attempts" >> "$ERROR_FILE"
    fi
}

echo "Starting parallel Pokémon data fetch..."

# Run all downloads in parallel
for pokemon in "${POKEMONS[@]}"; do
    fetch_pokemon "$pokemon" &
done

# Wait for all background processes to finish
wait

echo "✅ All parallel requests completed."

